#注意使用项目文件

import maya.cmds as mc
mc.polySphere()

http://help.autodesk.com/view/MAYAUL/2015/ENU/
maya中文帮助文档

http://help.autodesk.com/view/MAYAUL/2016/ENU/?guid=__py_ref_class_open_maya_1_1_m_fn_mesh_html
注意这个笔记


Ctrl + H 影藏物体

Ctrl + D 复制物体

G 重复上一个命令

S 快速k帧


按住Insert可以局部修改骨骼的位置

骨架创建好后需要看方向


刷骨骼笔刷时 ctrl 反选 shift 微调

F8点模式--窗口--常规编辑器--组件编辑器--平滑蒙皮--选择点




import maya.cmds as cmds

# Non-planar faces
cmds.polyPlane( n='plg1', sx=5, sy=5, w=5, h=5 )
cmds.move( -6, 0, 0 )
cmds.polyMoveVertex( 'plg1.vtx[7]', 'plg1.vtx[10]', 'plg1.vtx[25]', 'plg1.vtx[28]', ltz=1 )
cmds.polyTriangulate( 'plg1.f[0:1]', 'plg1.f[5:6]', 'plg1.f[3:4]', 'plg1.f[8:9]', 'plg1.f[15:16]', 'plg1.f[20:21]', 'plg1.f[18:19]', 'plg1.f[23:24]' )

Clausewitz Engine
paradox引擎 源码

http://www.moddb.com/engines/clausewitz-engine

download.autodesk.com/global/docs/maya2012/en_us/index.html

OpenMaya.MFnMesh Class Reference
https://knowledge.autodesk.com/zh-hans/search-result/caas/CloudHelp/cloudhelp/2016/CHS/Maya-SDK/py-ref/class-open-maya-1-1-m-fn-mesh-html.html

http://download.autodesk.com/us/maya/2010help/api/class_m_fn_mesh.html

http://www.charactersetup.com/tutorial_skinWeights.html


// 导入骨架
import pymel.core as pmc
import pymel.core.datatypes as pmdt
new_bone = pmc.joint()
pmc.select(new_bone)
pmc.rename(new_bone, "base")
pmc.parent(new_bone, world = True)

q=((x,y,z)sinθ2, cosθ2) 

// 自动关键帧的工具
pmc.currentTime(0)
pmc.select("pCube1")
pmc.move( 1, 1, 1 )
pmc.setKeyframe()

pmc.currentTime(0)
pmc.select("pPipe1")
pmc.move( 8, 8, 1 )
pmc.setKeyframe()

// 
import 

	import maya.OpenMaya as OpenMaya
	# vertices
    numVertices = 0
    vertexArray = OpenMaya.MFloatPointArray()   # array of points
    for i in xrange(0, len(verts), 3):
        v = OpenMaya.MFloatPoint(verts[i], verts[i+1], verts[i+2])
        vertexArray.append(v)
        numVertices += 1

    # faces
    numPolygons = len(tris) / 3
    polygonCounts = OpenMaya.MIntArray()    # count of vertices per poly
    for i in range(0, numPolygons):
        polygonCounts.append(3)
    # OpenMaya.MScriptUtil.createIntArrayFromList([3]*numPolygons, polygonCounts)

    # vert connections
    polygonConnects = OpenMaya.MIntArray()
    for item in tris:
        polygonConnects.append(item)
    # OpenMaya.MScriptUtil.createIntArrayFromList(tris, polygonConnects)

    # default UVs
    uArray = OpenMaya.MFloatArray()
    vArray = OpenMaya.MFloatArray()
    if uv_Ch.get(0):
        uv_data = uv_Ch[0]
        for i in xrange(0, len(uv_data), 2):
            uArray.append(uv_data[i])
            vArray.append(1 - uv_data[i+1])        # flip the UV coords in V!

    """ ================================================================================================================
        create the new mesh """
    mFn_Mesh.create(numVertices, numPolygons, vertexArray, polygonCounts, polygonConnects, uArray, vArray, new_object)
    mFn_Mesh.setName(tmp_mesh_name)
    m_DagMod.doIt()     # sets up the transform parent to the mesh shape

    # PyNode for the mesh
    new_mesh = pmc.PyNode(tmp_mesh_name)
    new_transform = pmc.listRelatives(new_mesh, type='transform', parent=True)[0]
	
	
import maya.OpenMaya as OpenMaya

numVertices = 3
vertexArray = OpenMaya.MFloatPointArray()
v = OpenMaya.MFloatPoint(0.0, 0.0, 0.0)
vertexArray.append(v)
v = OpenMaya.MFloatPoint(0.0, 1.0, 0.0)
vertexArray.append(v)
v = OpenMaya.MFloatPoint(1.0, 0.0, 0.0)
vertexArray.append(v)

numPolygons = 3
polygonCounts = OpenMaya.MIntArray()
polygonCounts.append(3)

polygonConnects = OpenMaya.MIntArray()
polygonConnects.append(0)
polygonConnects.append(1)
polygonConnects.append(2)

uArray = OpenMaya.MFloatArray()
vArray = OpenMaya.MFloatArray()


uArray.append(0.0)
uArray.append(0.0)
uArray.append(1.0)

vArray.append(1.0)
vArray.append(0.0)
vArray.append(1.0)

tmp_mesh_name = "test_mesh"

mFn_Mesh = OpenMaya.MFnMesh()
m_DagMod = OpenMaya.MDagModifier()
new_object = m_DagMod.createNode('transform')

mFn_Mesh.create(numVertices, numPolygons, vertexArray, polygonCounts, polygonConnects, uArray, vArray, new_object)
mFn_Mesh.setName(tmp_mesh_name)
m_DagMod.doIt()     # sets up the transform parent to the mesh shape

# PyNode for the mesh
new_mesh = pmc.PyNode(tmp_mesh_name)
new_transform = pmc.listRelatives(new_mesh, type='transform', parent=True)[0]


http://help.autodesk.com/view/MAYAUL/2017/ENU/?guid=__py_ref_class_open_maya_1_1_m_fn_mesh_html

http://ewertb.soundlinker.com/api/api.010.php
add uvset

多个uvset不应该在create的时候提供，而应该在后期提供
uv的顺序是跟着vertexIndex来走的，只要每个三角形能找到自己的uv坐标即可

软边
硬边
分列前 分裂后

uv 切割后，同一个位置的顶点，会对应不同位置的uv

https://www.youtube.com/watch?v=-HL_Upp5YBc
Stepping Up the UV process ( Full modeling / texturing tutorial )


help
http://help.autodesk.com/view/MAYAUL/2016/CHS/?guid=__py_ref_class_open_maya_1_1_m_quaternion_html


#########################

http://help.autodesk.com/view/MAYAUL/2016/CHS/?guid=__py_ref_class_open_maya_anim_1_1_m_fn_skin_cluster_html




















